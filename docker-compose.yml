version: '3.8'

services:
  rabbitmq:
    container_name: 'rabbit-tt'
    image: rabbitmq:3-management
    hostname: 'rabbitmq'
    ports:
      - "5671:5672"
      - "15671:15672"
    networks:
      - my-network  
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin 
  postgres:
    container_name: 'postgres-tt'
    hostname: database
    image: postgres
    ports: ["5431:5432"]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=my_db
    networks:
      - my-network
  ttservice:
    build:
      context: .
      dockerfile: ./TT.Service/Dockerfile
    image: "tt-service-compose"
    container_name: tt-service-compose-tt
    hostname: 'service'
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    ports:
      - '6001:80'
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - my-network 
  ttproviderone:
    build:
      context: .
      dockerfile: ./TT.ProviderOne/Dockerfile
    image: "tt-providerone-compose"
    container_name: tt-providerone-compose-tt
    hostname: 'providerone'
    ports:
      - '6002:80'
    networks:
      - my-network 
  ttprovidertwo:
    build:
      context: .
      dockerfile: ./TT.ProviderTwo/Dockerfile
    image: "tt-providertwo-compose"
    container_name: tt-providertwo-compose-tt
    hostname: 'providertwo'
    ports:
      - '6003:80'
    networks:
      - my-network 
 
networks:
  my-network:
    name: existing_docker_network
    driver: bridge
volumes:
  rabbitmq_data:
    driver: local

